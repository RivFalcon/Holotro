[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "function Card:shatter()"
position = "after"
match_indent = true
payload = '''
    local flag = SMODS.calculate_context({hololive_shatter_card=self},true)
'''

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "play_sound('glass'..math.random(1, 6), math.random()*0.2 + 0.9,0.5)"
position = "at"
match_indent = true
payload = '''
if flag.durable or self.ability.durable then
    play_sound('hololive_Ceci_Durable', math.random()*0.2 + 0.9,0.5)
    G.playing_card = (G.playing_card and G.playing_card + 1) or 1
    local _card = copy_card(self, nil, nil, G.playing_card)
    _card:add_to_deck()
    G.discard:emplace(_card)
    table.insert(G.playing_cards, _card)
    playing_card_joker_effects({true})
    _card:start_materialize()
else
    play_sound('glass'..math.random(1, 6), math.random()*0.2 + 0.9,0.5)
end
'''

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "play_sound('whoosh2', math.random()*0.2 + 0.9,0.5)"
position = "at"
match_indent = true
payload = '''
if self.ability.durable then
    play_sound('hololive_Ceci_Durable', math.random()*0.2 + 0.9,0.5)
    G.playing_card = (G.playing_card and G.playing_card + 1) or 1
    local _card = copy_card(self, nil, nil, G.playing_card)
    _card:add_to_deck()
    G.discard:emplace(_card)
    table.insert(G.playing_cards, _card)
    playing_card_joker_effects({true})
    _card:start_materialize()
else
    play_sound('whoosh2', math.random()*0.2 + 0.9,0.5)
end
'''